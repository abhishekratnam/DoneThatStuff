"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SquircleView = SquircleView;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));

var _figmaSquircle = require("figma-squircle");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SquircleView({
  squircleParams,
  children,
  ...rest
}) {
  return /*#__PURE__*/React.createElement(_reactNative.View, rest, /*#__PURE__*/React.createElement(SquircleBackground, squircleParams), children);
}

function SquircleBackground({
  cornerRadius = 0,
  topLeftCornerRadius,
  topRightCornerRadius,
  bottomRightCornerRadius,
  bottomLeftCornerRadius,
  cornerSmoothing,
  fillColor = '#000',
  strokeColor = '#000',
  strokeWidth = 0
}) {
  const [squircleSize, setSquircleSize] = (0, React.useState)(null);
  return /*#__PURE__*/React.createElement(_reactNative.View, {
    style: _reactNative.StyleSheet.absoluteFill,
    onLayout: e => {
      setSquircleSize({
        width: e.nativeEvent.layout.width,
        height: e.nativeEvent.layout.height
      });
    }
  }, /*#__PURE__*/React.createElement(_reactNativeSvg.default, null, /*#__PURE__*/React.createElement(_reactNativeSvg.Path, {
    d: squircleSize ? (0, _figmaSquircle.getSvgPath)({
      width: squircleSize.width - strokeWidth,
      height: squircleSize.height - strokeWidth,
      cornerSmoothing,
      cornerRadius,
      topLeftCornerRadius,
      topRightCornerRadius,
      bottomRightCornerRadius,
      bottomLeftCornerRadius
    }) : '',
    translateX: strokeWidth / 2,
    translateY: strokeWidth / 2,
    fill: fillColor,
    stroke: strokeColor,
    strokeWidth: strokeWidth
  })));
}
//# sourceMappingURL=index.js.map