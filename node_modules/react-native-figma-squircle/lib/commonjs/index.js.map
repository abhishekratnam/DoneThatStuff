{"version":3,"sources":["index.tsx"],"names":["SquircleView","squircleParams","children","rest","SquircleBackground","cornerRadius","topLeftCornerRadius","topRightCornerRadius","bottomRightCornerRadius","bottomLeftCornerRadius","cornerSmoothing","fillColor","strokeColor","strokeWidth","squircleSize","setSquircleSize","StyleSheet","absoluteFill","e","width","nativeEvent","layout","height"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAkBA,SAASA,YAAT,CAAsB;AACpBC,EAAAA,cADoB;AAEpBC,EAAAA,QAFoB;AAGpB,KAAGC;AAHiB,CAAtB,EAIyC;AACvC,sBACE,oBAAC,iBAAD,EAAUA,IAAV,eACE,oBAAC,kBAAD,EAAwBF,cAAxB,CADF,EAEGC,QAFH,CADF;AAMD;;AAED,SAASE,kBAAT,CAA4B;AAC1BC,EAAAA,YAAY,GAAG,CADW;AAE1BC,EAAAA,mBAF0B;AAG1BC,EAAAA,oBAH0B;AAI1BC,EAAAA,uBAJ0B;AAK1BC,EAAAA,sBAL0B;AAM1BC,EAAAA,eAN0B;AAO1BC,EAAAA,SAAS,GAAG,MAPc;AAQ1BC,EAAAA,WAAW,GAAG,MARY;AAS1BC,EAAAA,WAAW,GAAG;AATY,CAA5B,EAUmB;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IACJ,oBAAmD,IAAnD,CADF;AAGA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAEC,wBAAWC,YADpB;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACfH,MAAAA,eAAe,CAAC;AACdI,QAAAA,KAAK,EAAED,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBF,KADd;AAEdG,QAAAA,MAAM,EAAEJ,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqBC;AAFf,OAAD,CAAf;AAID;AAPH,kBASE,oBAAC,uBAAD,qBACE,oBAAC,oBAAD;AACE,IAAA,CAAC,EACCR,YAAY,GACR,+BAAW;AACTK,MAAAA,KAAK,EAAEL,YAAY,CAACK,KAAb,GAAqBN,WADnB;AAETS,MAAAA,MAAM,EAAER,YAAY,CAACQ,MAAb,GAAsBT,WAFrB;AAGTH,MAAAA,eAHS;AAITL,MAAAA,YAJS;AAKTC,MAAAA,mBALS;AAMTC,MAAAA,oBANS;AAOTC,MAAAA,uBAPS;AAQTC,MAAAA;AARS,KAAX,CADQ,GAWR,EAbR;AAeE,IAAA,UAAU,EAAEI,WAAW,GAAG,CAf5B;AAgBE,IAAA,UAAU,EAAEA,WAAW,GAAG,CAhB5B;AAiBE,IAAA,IAAI,EAAEF,SAjBR;AAkBE,IAAA,MAAM,EAAEC,WAlBV;AAmBE,IAAA,WAAW,EAAEC;AAnBf,IADF,CATF,CADF;AAmCD","sourcesContent":["import * as React from 'react'\nimport { ViewProps, View, StyleSheet } from 'react-native'\nimport { PropsWithChildren, useState } from 'react'\nimport Svg, { Color, Path } from 'react-native-svg'\nimport { getSvgPath } from 'figma-squircle'\n\ninterface SquircleParams {\n  cornerRadius?: number\n  topLeftCornerRadius?: number\n  topRightCornerRadius?: number\n  bottomRightCornerRadius?: number\n  bottomLeftCornerRadius?: number\n  cornerSmoothing: number\n  fillColor?: Color\n  strokeColor?: Color\n  strokeWidth?: number\n}\n\ninterface SquircleViewProps extends ViewProps {\n  squircleParams: SquircleParams\n}\n\nfunction SquircleView({\n  squircleParams,\n  children,\n  ...rest\n}: PropsWithChildren<SquircleViewProps>) {\n  return (\n    <View {...rest}>\n      <SquircleBackground {...squircleParams} />\n      {children}\n    </View>\n  )\n}\n\nfunction SquircleBackground({\n  cornerRadius = 0,\n  topLeftCornerRadius,\n  topRightCornerRadius,\n  bottomRightCornerRadius,\n  bottomLeftCornerRadius,\n  cornerSmoothing,\n  fillColor = '#000',\n  strokeColor = '#000',\n  strokeWidth = 0,\n}: SquircleParams) {\n  const [squircleSize, setSquircleSize] =\n    useState<{ width: number; height: number } | null>(null)\n\n  return (\n    <View\n      style={StyleSheet.absoluteFill}\n      onLayout={(e) => {\n        setSquircleSize({\n          width: e.nativeEvent.layout.width,\n          height: e.nativeEvent.layout.height,\n        })\n      }}\n    >\n      <Svg>\n        <Path\n          d={\n            squircleSize\n              ? getSvgPath({\n                  width: squircleSize.width - strokeWidth,\n                  height: squircleSize.height - strokeWidth,\n                  cornerSmoothing,\n                  cornerRadius,\n                  topLeftCornerRadius,\n                  topRightCornerRadius,\n                  bottomRightCornerRadius,\n                  bottomLeftCornerRadius,\n                })\n              : ''\n          }\n          translateX={strokeWidth / 2}\n          translateY={strokeWidth / 2}\n          fill={fillColor}\n          stroke={strokeColor}\n          strokeWidth={strokeWidth}\n        />\n      </Svg>\n    </View>\n  )\n}\n\nexport { SquircleView }\nexport type { SquircleParams }\n"]}